PROJECT(nebula)
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

INCLUDE(FindPkgConfig)

# CXX compiler
SET(CMAKE_CXX_COMPILER "clang++")

# CXXFLAGS used by compiler.
SET(CMAKE_CXX_FLAGS "-Wall -Wextra -std=c++11 -D_GNU_SOURCE=1 -D_REENTRANT")

SET(CMAKE_CXX_FLAGS_RELEASE "-O3 -DRELEASE")
SET(CMAKE_CXX_FLAGS_DEBUG "-g3 -DDISASSEMBLER")

# LDFLAGS used when linking nebula.
SET(NEBULA_LDFLAGS "")

# List of all the files of the project.
SET(NEBULA_SRCS
    src/commandline.cc
    src/frontends/abstractmainwindow.cc
    src/graphics/bgwtile.cc
    src/graphics/gpu.cc
    src/graphics/sprites.cc
    src/graphics/timer.cc
    src/keyboard/keyboard.cc
    src/logging.cc
    src/main.cc
    src/memory/mbcs/mbc.cc
    src/memory/mbcs/mbc1.cc
    src/memory/mbcs/mbc2.cc
    src/memory/mbcs/mbc3.cc
    src/memory/mbcs/mbc5.cc
    src/memory/mbcs/romonly.cc
    src/memory/mmu.cc
    src/z80/interrupts.cc
    src/z80/z80.cc
    src/z80/z80cbopcodes.cc
    src/z80/z80disassembler.cc
    src/z80/z80opcodes.cc
)

# Decide which display to use.
IF(NOT DEFINED _DISPLAY_BACKEND)
    MESSAGE(FATAL_ERROR "You must define the display backend to compile for.")
ELSEIF(_DISPLAY_BACKEND MATCHES "SDL")
    PKG_SEARCH_MODULE(SDL2 REQUIRED sdl2)

    STRING(REPLACE ";" " " SDL2_CFLAGS_S "${SDL2_CFLAGS}")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${SDL2_CFLAGS_S}")

    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D_TARGET=0")

    STRING(REPLACE ";" " " SDL2_LDFLAGS_S "${SDL2_LDFLAGS}")
    SET(NEBULA_LDFLAGS "-lpthread ${SDL2_LDFLAGS_S}")

    SET(NEBULA_SRCS ${NEBULA_SRCS}
                    src/frontends/sdl/mainwindow.cc
                    src/frontends/sdl/sdldisplay.cc
    )

    # Sound guard, for development.
    IF(DEFINED _SOUND)
        SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D_SOUND=${_SOUND}")
        SET(NEBULA_SRCS ${NEBULA_SRCS}
                        src/sound/channel.cc
                        src/sound/filters/channels/square.cc
                        src/sound/filters/channels/wave.cc
                        src/sound/filters/duty.cc
                        src/sound/filters/length.cc
                        src/sound/filters/sweep.cc
                        src/sound/filters/volume.cc
                        src/sound/sound.cc
                        src/utils/converter.cc
        )
    ENDIF()
ELSE()
    MESSAGE(FATAL_ERROR "This is not a known display backend.")
ENDIF()

# These files are generated by custom command just after it.
SET(NEBULA_DEFINITIONS
    ${CMAKE_CURRENT_SOURCE_DIR}/src/z80/disass.gdef
    ${CMAKE_CURRENT_SOURCE_DIR}/src/z80/cbopcodes.gdef
    ${CMAKE_CURRENT_SOURCE_DIR}/src/z80/opcodes.gdef
)

ADD_CUSTOM_COMMAND(
    OUTPUT ${NEBULA_DEFINITIONS}
    COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/tools/gen_opcodes.py ${CMAKE_CURRENT_SOURCE_DIR}/src/z80
    DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/tools/gen_opcodes.py
)

# Builds and links executable.
ADD_EXECUTABLE(nebula ${NEBULA_SRCS} ${NEBULA_DEFINITIONS})
TARGET_LINK_LIBRARIES(nebula ${NEBULA_LDFLAGS})
